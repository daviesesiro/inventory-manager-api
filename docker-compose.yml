services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-manager-api
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: ./
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-manager-worker
    command: node dist/worker.js
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    env_file:
      - .env

  mongo:
    image: mongo:latest
    container_name: mongo-db
    command: ["mongod", "--port", "${MONGO_CONTAINER_PORT}"]
    ports:
      - "${MONGO_HOST_PORT}:${MONGO_CONTAINER_PORT}"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}"
    networks:
      - app-network
    volumes:
      - redis_data:/data/db
    command: ["redis-server", "--port", "${REDIS_CONTAINER_PORT}"]
    env_file:
      - .env

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
    